import os
from aiogram import   F, Router
from aiogram.filters import CommandStart , Command
from aiogram.types import Message, CallbackQuery
import app.keyboards as kb
from aiogram.types import FSInputFile
from web.models import Report, Sos
from asgiref.sync import sync_to_async
from app.midelware import Verify
from aiogram.fsm.context import FSMContext
from bot.config import bot, dp
import asyncio
from pathlib import Path
from app.api import creat_category
import string
from bot.app.database.models import User , Oper, Admin
from bot.app.database.request import (
    is_admin, add_oper_req, get_opers, is_oper, 
    add_admin, get_tip_req, get_user, add_tip_req,
    check_user, create_user
)
from aiogram.types import InputFile

router = Router()

@router.callback_query(F.data=='sos')
async def create_sos(callback: CallbackQuery):
    user = await get_user(callback.message.from_user.id)
    if user:
        await callback.message.answer(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∏–≥–Ω–∞–ª SOS', reply_markup=kb.sos)
    else:
        await callback.message.edit_text(text='–£ –≤–∞—Å –Ω–µ –≤–µ—Ä–∏—Ñ–µ—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç', reply_markup= kb.main)
        return
@router.message(lambda msg: msg.location)
async def sos(message: Message):
    tg_id = message.from_user.id
    user = await get_user(tg_id)
    if user:
        sos = await sync_to_async(Sos.objects.create)(
            name = user.name,
            iin = user.iin,
            latitude=message.location.latitude,
            longitude=message.location.longitude,
            tg_id = tg_id
        )
        opers = await get_opers()
        for oper in opers:
            await bot.send_message(chat_id=int(oper.tg_id), 
                                   text=
                                   f'''
\t\t\t\tüö® 
<b>–ü–æ—Å—Ç—É–ø–∏–ª —Å–∏–≥–Ω–∞–ª SOS!</b>
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏–∏.

üë§ <b>–ò–º—è:</b> {sos.name}  
üÜî <b>–ò–ò–ù:</b> {sos.iin}  
üí¨ <b>Telegram ID:</b> {sos.tg_id}
üìç <b>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b>  
<a href="https://2gis.kz/geo/{sos.latitude},{sos.longitude}">–û—Ç–∫—Ä—ã—Ç—å –≤ 2–ì–ò–°</a>
‚ö†Ô∏è <b>–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞!</b>  
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –ø–µ—Ä–µ–¥–∞–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–ª—É–∂–±–∞–º.
''', parse_mode='HTML', disable_web_page_preview=True)
    else:
        await message.edit_text(text='–£ –≤–∞—Å –Ω–µ –≤–µ—Ä–∏—Ñ–µ—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç', reply_markup= kb.main)
        return